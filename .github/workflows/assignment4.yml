name: assignment4

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      build_success: ${{ steps.set-build-success.outputs.build_success }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Initialize log file with start time and submitter names
        id: init-log
        run: |
          echo "$(date -Iminutes)" > log.txt
          echo "Ron Bitton, Rotem Haim" >> log.txt

      - name: Build Docker Images using Docker Compose
        run: |
          # Build images for all services defined in your docker-compose.yml
          if docker compose build --no-cache; then
            echo "image successfully built" >> log.txt
            else
            echo "image not able to be built" >> log.txt
            exit 1
          fi

      - name: Save Docker images as tar files
        run: |
          docker save stocks-1a:latest -o stocks-1a.tar
          docker save capital-gains:latest -o capital-gains.tar

      - name: Upload Docker image artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-images
          path: |
            stocks-1a.tar
            capital-gains.tar

      - name: Upload log artifact (build stage)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: log.txt

      - name: Set build success output
        id: set-build-success
        run: echo "::set-output name=build_success::true"

  test:
    runs-on: ubuntu-latest
    needs: build
    outputs:
      test_success: ${{ steps.set-test-success.outputs.test_success }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker image artifacts from build job
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: ./images

      - name: Load stocks-1a image
        run: docker load -i ./images/stocks-1a.tar

      - name: Load capital gains image
        run: docker load -i ./images/capital-gains.tar

      - name: Download log artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: log
          path: .

      - name: Start Docker Compose services
        id: docker-compose-up
        run: |
          # Start the services as defined in your docker-compose.yml
          docker compose up -d
          # Wait a bit for services to start
          sleep 15
          # Verify that the stocks service container is running
          if docker ps | grep -q "stocks-1a"; then
            echo "Container up and running" >> log.txt
          else
            echo "Container failed to run" >> log.txt
            exit 1
          fi

      - name: Run pytest tests for stocks service
        id: pytest-run
        continue-on-error: true
        run: |
          pip install pytest requests
          pytest -s -v tests/assn4_tests.py | tee assn4_test_results.txt
          exit ${PIPESTATUS[0]}

      - name: Append pytest result status to log
        run: |
          if grep -q "failed" assn4_test_results.txt; then
            echo "tests failed" >> log.txt
          else
            echo "tests succeeded" >> log.txt
          fi

      - name: Upload pytest results artifact
        uses: actions/upload-artifact@v4
        with:
          name: pytest-results
          path: assn4_test_results.txt

      - name: Upload updated log artifact (after tests)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: log
          path: log.txt
          overwrite: true

      - name: Tear down Docker Compose (test job)
        if: always()
        run: docker compose down

      - name: Set test success output
        id: set-test-success
        run: |
          if grep -q "tests succeeded" log.txt; then
            echo "::set-output name=test_success::true"
          else
            echo "::set-output name=test_success::false"
          fi

  query:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker image artifacts from build job
        uses: actions/download-artifact@v4
        with:
          name: docker-images
          path: ./images

      - name: Load stocks-1a image
        run: docker load -i ./images/stocks-1a.tar

      - name: Load capital gains image
        run: docker load -i ./images/capital-gains.tar

      - name: Start Docker Compose services for query job
        run: |
          docker compose up -d
          sleep 15

      - name: Issue 6 POST requests to add stocks entries
        run: |
          # Assumes you have tests/stock1.json ... tests/stock6.json defined
          for i in {1..6}; do
            curl -X POST -H "Content-Type: application/json" -d @tests/stock${i}.json http://localhost:5001/stocks
          done

      - name: Process query.txt and generate response.txt
        run: |
          if [ ! -f query.txt ]; then
            echo "query.txt not found" && exit 1
          fi
          rm -f response.txt
          touch response.txt
          while IFS= read -r line || [ -n "$line" ]; do
            service=$(echo "$line" | cut -d':' -f1)
            qs=$(echo "$line" | cut -d':' -f2- | xargs)
            echo "query: ${service}:${qs}" >> response.txt

            echo "response:" >> response.txt
            if [ "$service" = "stocks" ]; then
              curl -s -w "http://127.0.0.1:5001/stocks?${qs}" >> response.txt
            elif [ "$service" = "capital-gains" ]; then
              curl -s -w "http://127.0.0.1:5003/capital-gains?${qs}" >> response.txt
            else
              echo "Unknown service" >> response.txt
            fi
            echo "" >> response.txt
          done < query.txt

      - name: Upload query response artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: query-response
          path: response.txt

      - name: Tear down Docker Compose (query job)
        if: always()
        run: docker compose down
